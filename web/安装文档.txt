
＃选择错误报告级别
＃脚本名称（如果重命名browse.php，请更改此名称）
#pookie的前缀（如果在同一域上运行多个代理时遇到问题，则更改）
＃在HTTPS上运行？
＃兼容模式 - 您可以禁用此功能以测试您的设置是否向前兼容。
＃经常删除向后兼容性，以便及时了解最新信息！检查这个是
#ESSENTIAL如果您正在分发主题或插件。
＃设置路径/网址
＃设置时区（取消注释并设置为所需的时区）
#date_default_timezone_set（ 'GMT'）;
＃确保请求时间可用
＃设置字母和数字列表
＃加载设置
*使用BlockScript保护
*语言 - 错误消息的文本
＃如果遇到HTTP错误（状态代码> = 400），脚本将在此处查看
＃对问题进行额外的“友好”解释。
*加载主题配置
＃当前版本 - 无需更改此内容！
＃在/ themes / themeName /文件夹中查找config.php
＃如果从相同的源文件运行多个代理
＃设置MULTIGLYPE常量以停止脚本自动加载主题配置文件。
*开始会话
＃将name设置为配置的值 - 如果在同一个域中运行多个代理，则更改
＃文件夹和遇到会话冲突。
＃允许缓存。我们不希望PHP自动发送任何与缓存相关的标头
＃（默认情况下它会尝试停止所有缓存）。使用此限制器发送的最少
＃headers，我们稍后覆盖。
＃如果session.auto_start = 1，请不要调用_start（）
*检查IP禁令
＃每次会话只检查一次或IP地址是否更改
*查找位域以确定选项
＃首先，找到位域！
＃在我们这里时，从查询字符串中获取标志
*确定选项/使用默认值
＃循环可能的选项
＃保存新的会话值
*唯一的网址
＃第一次访问？确保我们有一种独特的盐
#Conse在所有解析完成之前关闭，因此将全局复制唯一
*排序javascript标志
*这些决定了我们在服务器端进行多少解析以及可以进行多少解析
*留给浏览器客户端。
*自定义浏览器 - 设置默认值
*全球职能
*其中一些（例如模板）可以构成一个全新的类
*可以轻松换出以完全改变其工作方式。
*为了速度 - 但以便利为代价 - 所有这一切
*作为函数粘在一起。
* URL编码
*有3个选项会影响URL编码 - 路径信息设置，
*唯一的URL设置和用户选择是否编码。
＃获取正常的URL并将其转换为URL，当请求时，
＃将通过我们的代理加载资源
＃采用proxyURL（）函数代理的URL
＃并将其返回到正常的直接URL
#URL最初是HTML属性，所以*应该*已经全部
＃获取任何类型的URL（相对，绝对，带基数，从根等）
＃并返回绝对URL。
*模板系统
＃加载模板
＃获取模板名称并返回绝对路径
＃制作主题标签替换
＃如果使用其他页面，请替换main.php的内容
*输入编码/解码
* PHP将许多字符转换为传入的下划线
*变量名称试图与寄存器全局变量兼容。
*我们在代理和代理之间传输数据时保护这些字符
*客户端并在代理和目标之间传输时恢复正常。
#Encode
＃和互补解码
* Bitfield操作
*代理javascript - 注入所有页面并允许导航
*没有POST到/includes/process.php页面。
*兼容性
＃要求仅为PHP5，但PHP 5.1.3中引入了此功能
*杂项
＃发送no-cache标头。
＃修剪和striplashes
#Redirect
＃ 错误信息
＃返回当前URL（代理页面的绝对URL）
＃检查tmp目录并根据需要创建它
#note - 旨在废除URL和HTML源代码。不提供安全性。使用SSL实现安全性。
#note - 旨在废除URL和HTML源代码。不提供安全性。使用SSL实现安全性。
#Proxify是UpsideOut，Inc。的注册商标。保留所有权利。
